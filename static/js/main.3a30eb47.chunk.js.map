{"version":3,"sources":["map-pin.js","pins.js","map.js","drawer.js","App.js","serviceWorker.js","index.js","itinerary/day1.md","static/images/map_pin.png","itinerary/day2.md"],"names":["MapPin","this","props","latitude","longitude","offsetLeft","offsetTop","pinHeight","name","markdownPath","onClick","style","fontSize","src","PinImage","height","alt","Component","PinList","Day1","Day2","navStyle","position","top","left","padding","Map","state","viewport","width","zoom","toString","leftOffset","parseInt","topOffset","mapPins","map","pin","index","key","textAlign","onViewportChange","setState","mapOptions","mapboxApiAccessToken","process","responsive","className","PersistentDrawerRight","classes","theme","drawer","variant","anchor","open","elevation","paper","drawerPaper","drawerHeader","handleDrawerClose","direction","paddingTop","gutterBottom","title","paddingLeft","paddingRight","dayInfo","dangerouslySetInnerHTML","withStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginLeft","marginRight","hide","flexShrink","alignItems","mixins","toolbar","content","flexGrow","contentShift","withTheme","App","handleDrawerOpen","filePath","drawerTitle","fetchMarkdown","fetch","then","response","text","rawMarkup","marked","sanitize","markdown","__html","container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3a30eb47.chunk.js","sourcesContent":["// @flow\n\nimport React, { Component } from 'react';\nimport { Marker } from 'react-map-gl';\n\nimport PinImage from './static/images/map_pin.png';\n\ntype Props = {\n  latitude: number,\n  longitude: number,\n  offsetLeft: number,\n  offsetTop: number,\n  pinHeight: string,\n  markdownPath: string,\n  name: string,\n  onClick: (filePath: string, drawerTitle: string) => mixed\n};\n\nclass MapPin extends Component<Props> {\n  render() {\n    const { latitude, longitude, offsetLeft, offsetTop, pinHeight, name, markdownPath, onClick } = this.props;\n\n    return (\n      <Marker latitude={latitude} longitude={longitude} offsetLeft={offsetLeft} offsetTop={offsetTop}>\n        <div style={{ fontSize: '12px' }}>{name}</div>\n        <img src={PinImage} style={{ height: pinHeight }} alt={'Map Pin'} onClick={() => onClick(markdownPath, name)} />\n      </Marker>\n    );\n  }\n}\n\nexport default MapPin;\n","// @flow\n\nimport Day1 from './itinerary/day1.md';\nimport Day2 from './itinerary/day2.md';\n\ntype Pin = {\n  name: string,\n  markdownPath: string,\n  latitude: number,\n  longitude: number\n};\n\ntype Pins = Array<Pin>;\n\nexport const PinList: Pins = [\n  { name: 'Day 1', latitude: 53.428594, longitude: -9.319193, markdownPath: Day1 },\n  { name: 'Day 2', latitude: 53.455881, longitude: -9.540736, markdownPath: Day2 },\n  { name: 'Day 3', latitude: 53.520828, longitude: -9.74239, markdownPath: Day1 },\n  { name: 'Day 4', latitude: 53.595843, longitude: -9.694259, markdownPath: Day1 },\n  { name: 'Day 5', latitude: 53.696062, longitude: -9.616408, markdownPath: Day1 },\n  { name: 'Day 6', latitude: 53.801132, longitude: -9.522257, markdownPath: Day1 }\n];\n","// @flow\n\nimport React, { Component } from 'react';\nimport ReactMapGL, { NavigationControl } from 'react-map-gl';\n\nimport MapPin from './map-pin';\nimport { PinList } from './pins';\n\nconst navStyle = {\n  position: 'absolute',\n  top: 36,\n  left: 0,\n  padding: '10px'\n};\n\ntype Props = {\n  onClick: (filePath: string, drawerTitle: string) => mixed\n};\n\ntype ViewportState = {\n  height: string,\n  width: string,\n  latitude: number,\n  longitude: number,\n  zoom: number\n};\n\ntype State = { viewport: ViewportState };\n\nexport default class Map extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      viewport: {\n        height: '100%',\n        width: '100%',\n        latitude: 53.428594,\n        longitude: -9.319193,\n        zoom: 8\n      }\n    };\n  }\n\n  render() {\n    const { zoom } = this.state.viewport;\n    const pinHeight = (zoom * 2).toString() + 'px';\n    const leftOffset = -(parseInt(pinHeight) / 2);\n    const topOffset = -parseInt(pinHeight) - 12;\n    let mapPins = <div />;\n    if (zoom > 6) {\n      mapPins = PinList.map((pin, index) => {\n        return (\n          <MapPin\n            key={index}\n            latitude={pin.latitude}\n            longitude={pin.longitude}\n            offsetLeft={leftOffset}\n            offsetTop={topOffset}\n            pinHeight={pinHeight}\n            name={pin.name}\n            markdownPath={pin.markdownPath}\n            onClick={this.props.onClick}\n          />\n        );\n      });\n    }\n\n    return (\n      <div style={{ height: '100%', width: '100%', textAlign: 'left' }}>\n        <ReactMapGL\n          height={'100%'}\n          width={'100%'}\n          {...this.state.viewport}\n          onViewportChange={(viewport: ViewportState) => this.setState({ viewport })}\n          mapOptions={{ style: 'mapbox://styles/mapbox/outdoors-v10' }}\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_API_TOKEN}\n          responsive\n        >\n          {mapPins}\n          <div className=\"nav\" style={navStyle}>\n            <NavigationControl onViewportChange={(viewport: ViewportState) => this.setState({ viewport })} />\n          </div>\n        </ReactMapGL>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100%'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: '33%',\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: '33%'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: 0,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: '33%'\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n});\n\ntype Props = {\n  classes: Object,\n  open: boolean,\n  title: string,\n  theme: Object,\n  dayInfo: Object,\n  handleDrawerClose: () => mixed\n};\n\nclass PersistentDrawerRight extends Component<Props> {\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={this.props.open}\n        elevation={1000}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={this.props.handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n          <Typography style={{ textAlign: 'center', paddingTop: '8px' }} variant=\"h4\" gutterBottom>\n            {this.props.title}\n          </Typography>\n        </div>\n        <Divider />\n        <div style={{ paddingLeft: '8px', paddingRight: '4px' }}>\n          {this.props.dayInfo ? <div dangerouslySetInnerHTML={this.props.dayInfo} /> : <div />}\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nPersistentDrawerRight.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerRight);\n","// @flow\n\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport marked from 'marked';\n\nimport Map from './map';\nimport DrawerRight from './drawer';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100%'\n  }\n});\n\ntype Props = {\n  classes: {\n    root: {\n      display: 'flex',\n      height: '100%'\n    }\n  }\n};\n\ntype State = {\n  open: boolean,\n  markdown: Object,\n  drawerTitle: string\n};\n\nclass App extends Component<Props, State> {\n  constructor(props: Props) {\n    super();\n    this.state = {\n      open: false,\n      markdown: null,\n      drawerTitle: ''\n    };\n  }\n\n  handleDrawerOpen = (filePath: string, drawerTitle: string) => {\n    this.setState({ open: true, drawerTitle: drawerTitle });\n    this.fetchMarkdown(filePath);\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  fetchMarkdown = (filePath: string) => {\n    fetch(filePath)\n      .then(response => {\n        return response.text();\n      })\n      .then(text => {\n        var rawMarkup = marked(text, { sanitize: true });\n        this.setState({ markdown: { __html: rawMarkup } });\n      });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <Grid container>\n          <DrawerRight\n            handleDrawerClose={this.handleDrawerClose}\n            open={this.state.open}\n            dayInfo={this.state.markdown}\n            title={this.state.drawerTitle}\n          />\n          <Map onClick={this.handleDrawerOpen} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/day1.0a0a2dd0.md\";","module.exports = __webpack_public_path__ + \"static/media/map_pin.a3df306f.png\";","module.exports = __webpack_public_path__ + \"static/media/day2.55ffb335.md\";"],"sourceRoot":""}